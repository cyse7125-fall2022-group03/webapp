spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_DATABASE:todo}?serverTimezone=UTC
spring.datasource.username=${DB_USERNAME:csye7125}
spring.datasource.password=${DB_PASSWORD:csye7125}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.data.rest.base-path=/
server.port=8080
logging.level.root=DEBUG
spring.flyway.baseline-on-migrate=true
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.group.liveness.include=livenessStateProbeIndicator,diskSpace,refreshScope
management.endpoint.health.group.readiness.include=readinessStateProbeIndicator
management.endpoint.health.group.liveness.show-details=always
management.endpoint.health.group.readiness.show-details=always
spring.kafka.bootstrap-servers=${KAFKA_IP:infra-kafka}:${KAFKA_PORT:9092}
spring.kafka.producer.bootstrap-servers=${KAFKA_IP:infra-kafka}:${KAFKA_PORT:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
kafka.topic=${KAFKA_TOPIC:topic01-team3"}
elasticsearch.host=${ELASTIC_HOST:elasticsearch-master}
elasticsearch.port=${ELASTIC_PORT:9200}
